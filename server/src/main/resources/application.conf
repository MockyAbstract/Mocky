server {
  host = "0.0.0.0"
  port = 8080, port = ${?MOCKY_SERVER_PORT}
}

database {
  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://localhost/mocky", url = ${?MOCKY_DATABASE_URL}
  user = mocky, user = ${?MOCKY_DATABASE_USER}
  password = mocky, password = ${?MOCKY_DATABASE_PASSWORD}
  thread-pool-size = 32, thread-pool-size = ${?MOCKY_DATABASE_POOL_SIZE}
}

settings {
  # Environment (prod/dev)
  environment = "dev", environment = ${?MOCKY_ENVIRONMENT}
  # URL placed between all mocks
  endpoint = "http://"${server.host}":"${server.port}, endpoint = ${?MOCKY_ENDPOINT}

  admin {
    # Administration password (required!)
    password = ${MOCKY_ADMIN_PASSWORD}
    # Token in which the administration password must be sent
    header = "X-Auth-Token", header = ${?MOCKY_ADMIN_HEADER}
  }
  cors {
    # Domain allowed to send CORS requests
    domain: "http://localhost:3000", domain = ${?MOCKY_CORS_DOMAIN}
    # Domains allowed only when `settings.environment` = dev
    dev-domains:[]
  }
  throttle {
    amount: 100                   # How many request are allowed by `per` duration
    per: 1s                       # How often the throttling limit is renewed
    max-clients: 100000           # Max number of clients allowed in parralel (more need more ram)
  }
  mock {
    content-max-length = 1000000  # Maximum mock content length
    secret-max-length = 64        # Maximum size for the mock secret
  }
  sleep {
    max-delay = 60s               # Maximum duration allowed for the sleep feature
    parameter = "mocky-delay"     # Parameter used to activate the sleep for the request
  }
  security {
    bcrypt-iterations = 14, bcrypt-iterations = ${?MOCKY_BCRYPT_ITERATIONS}
                                  # How many bcrypt iterations to run for hashing password.
                                  # Higher number means higher security but lag when creating mock
                                  # See https://www.postgresql.org/docs/11/pgcrypto.html#PGCRYPTO-ICFC-TABLE
  }
}

